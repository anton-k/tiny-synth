{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"getInstr",
				"getInstrumentPath"
			],
			[
				"tu",
				"tuningId"
			],
			[
				"tun",
				"tuning"
			],
			[
				"tui",
				"tuning"
			],
			[
				"tunI",
				"tuningId"
			],
			[
				"fad",
				"faderDict"
			],
			[
				"res",
				"resonance"
			],
			[
				"ti",
				"tiny_synth"
			],
			[
				"tr",
				"tree"
			],
			[
				"app",
				"append"
			],
			[
				"tre",
				"trees"
			],
			[
				"font",
				"fontObjects"
			],
			[
				"O",
				"OnFontUp"
			],
			[
				"st",
				"state"
			],
			[
				"fon",
				"fontSize"
			],
			[
				"re",
				"retrigger_active_keys"
			],
			[
				"over",
				"overtonePad"
			],
			[
				"vib",
				"Vibraphone"
			],
			[
				"ins",
				"instrName"
			],
			[
				"in",
				"instrs"
			],
			[
				"pat",
				"patchByNameMidi"
			],
			[
				"instr",
				"instrIdFromE"
			],
			[
				"trigByName",
				"trigByNameMidi_"
			],
			[
				"Nam",
				"namedIntruments"
			],
			[
				"Instr",
				"InstrBody"
			],
			[
				"sa",
				"saveNamedInstr"
			],
			[
				"tri",
				"trigByName_"
			],
			[
				"sca",
				"scaleKey"
			],
			[
				"sc",
				"scaleTab"
			],
			[
				"PAt",
				"Patch2"
			],
			[
				"D",
				"DryWetRatio"
			],
			[
				"imp",
				"impulseMarimba2"
			],
			[
				"Fre",
				"frenchHornMuted"
			],
			[
				"pi",
				"piccolo"
			],
			[
				"vio",
				"violaMuted"
			],
			[
				"Sharc",
				"SharcInstr"
			],
			[
				"ke",
				"keyColumns"
			],
			[
				"syn",
				"syncBeats"
			],
			[
				"harm",
				"harmonics2tab"
			],
			[
				"no",
				"noteHarmonics"
			],
			[
				"tabs",
				"tabs"
			],
			[
				"fmG",
				"fmGraph"
			],
			[
				"fmGr",
				"fmGraphOuts"
			],
			[
				"fmGrap",
				"fmGraphOuts"
			],
			[
				"render",
				"renderIdx"
			],
			[
				"PS",
				"PatchSig2"
			],
			[
				"Pa",
				"Patch1"
			],
			[
				"hardSa",
				"hardSaturator2"
			],
			[
				"hP",
				"headPanNet2"
			],
			[
				"sta",
				"staticHeadPan"
			],
			[
				"simpl",
				"simpleHrtfstat"
			],
			[
				"si",
				"simpleHrtfmove"
			],
			[
				"hea",
				"headPan"
			],
			[
				"har",
				"harmonics2tab"
			],
			[
				"letCs",
				"letCseFramed"
			],
			[
				"has",
				"hasWithSalt"
			],
			[
				"inf",
				"infoName"
			],
			[
				"ratedE",
				"ratedExpHash"
			],
			[
				"hash",
				"hashWithSalt"
			],
			[
				"Mul",
				"MultiRate"
			],
			[
				"li",
				"lightIsTooBrightPad"
			],
			[
				"poly",
				"polySynthInstr"
			],
			[
				"pur",
				"pureBass"
			],
			[
				"osc",
				"oscs"
			],
			[
				"pol",
				"polySynthInstr"
			],
			[
				"polyS",
				"polySynthFx"
			],
			[
				"gre",
				"greaterThanEquals"
			],
			[
				"les",
				"lessThanEquals"
			],
			[
				"le",
				"lessThanEquals"
			],
			[
				"Fx",
				"FxFun"
			],
			[
				"Unt",
				"Unit"
			],
			[
				"bonS",
				"bonSpec3"
			],
			[
				"cS",
				"cymSpec2"
			],
			[
				"hC",
				"highConga"
			],
			[
				"chh",
				"closedHiHat"
			],
			[
				"sampler",
				"getSampleRate"
			],
			[
				"pa",
				"patchFx"
			],
			[
				"stop",
				"stops"
			],
			[
				"evtT",
				"evtTrigNoInit"
			],
			[
				"sCT",
				"syncCharToggle"
			],
			[
				"syncEvtT",
				"syncEvtTap"
			],
			[
				"min",
				"minitVal"
			],
			[
				"ii",
				"initVal"
			],
			[
				"eT",
				"evtTrigger"
			],
			[
				"dryS",
				"drySchedUntil"
			],
			[
				"drySc",
				"drySched"
			],
			[
				"atS",
				"atSco"
			],
			[
				"ri",
				"rimSpec"
			],
			[
				"lC",
				"lowConga"
			],
			[
				"ho",
				"highConga"
			],
			[
				"hig",
				"highTom"
			],
			[
				"mi",
				"midTom"
			],
			[
				"op",
				"openHiHat"
			],
			[
				"ma",
				"maracas"
			],
			[
				"bong",
				"bongo3"
			],
			[
				"bon",
				"bongo2"
			],
			[
				"cy",
				"cymbal2"
			],
			[
				"choi",
				"choirE"
			],
			[
				"cho",
				"choirO"
			],
			[
				"acco",
				"accordeonBright2"
			],
			[
				"acc",
				"accordeonBright"
			],
			[
				"epi",
				"epianoBright"
			],
			[
				"mu",
				"mutedPiano"
			],
			[
				"wi",
				"windPad"
			],
			[
				"noB",
				"noiseBellSpec"
			],
			[
				"noi",
				"noisyChoir"
			],
			[
				"chA",
				"choirA"
			],
			[
				"hi",
				"highConga"
			],
			[
				"abo",
				"abody2"
			],
			[
				"afe",
				"afeedbkRef"
			],
			[
				"bass",
				"bassClarinet"
			],
			[
				"lrge",
				"largeHall2"
			],
			[
				"vibra",
				"vibraphone1Size"
			],
			[
				"P",
				"Patch1"
			],
			[
				"toRe",
				"toRel"
			],
			[
				"strik",
				"strikeRelease"
			],
			[
				"lar",
				"largeHall2"
			],
			[
				"strikeRe",
				"strikeReverb"
			],
			[
				"ra",
				"razorLeadSpeed"
			],
			[
				"raz",
				"razorPadSpeed"
			],
			[
				"accordeon",
				"accordeon"
			],
			[
				"aF",
				"accordeonFreq3"
			],
			[
				"sm",
				"smallHall2"
			],
			[
				"c",
				"cathedralOrgan"
			],
			[
				"fmI",
				"fmatrixIndex"
			],
			[
				"fmO",
				"fmatrixOuts"
			],
			[
				"Fm",
				"Fmatrix"
			],
			[
				"ren",
				"renderGraph"
			]
		]
	},
	"buffers":
	[
		{
			"file": "tiny_synth/main.py",
			"settings":
			{
				"buffer_size": 16133,
				"line_ending": "Unix"
			}
		},
		{
			"file": "setup.py",
			"settings":
			{
				"buffer_size": 1937,
				"line_ending": "Unix"
			}
		},
		{
			"file": "README.md",
			"settings":
			{
				"buffer_size": 994,
				"line_ending": "Unix"
			}
		},
		{
			"file": "MANIFEST.in",
			"settings":
			{
				"buffer_size": 81,
				"line_ending": "Unix"
			}
		},
		{
			"file": "tiny_synth/resources/__init__.py",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix"
			}
		},
		{
			"file": "tiny_synth/piano.py",
			"settings":
			{
				"buffer_size": 6509,
				"line_ending": "Unix"
			}
		},
		{
			"file": "tiny_synth/inits.py",
			"settings":
			{
				"buffer_size": 574,
				"line_ending": "Unix"
			}
		},
		{
			"file": "tiny_synth/Lib.hs",
			"settings":
			{
				"buffer_size": 11233,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "Package Control Messages\n========================\n\nPlainTasks\n----------\n\n  Thank you for installing PlainTasks.\n  \n  For quick start you probably would like to go through a short tutorial:\n  Preferences → Package Settings → PlainTasks → Tutorial\n",
			"settings":
			{
				"buffer_size": 247,
				"line_ending": "Unix",
				"name": "Package Control Messages",
				"read_only": true,
				"scratch": true
			}
		},
		{
			"contents": "How to Use PlainTasks:\n\nProjects:\n ☐ Anything with colon at the end of the line is a project title\n ☐ Projects can be nested inside each other\n ☐ Projects can be folded (a built-in editor feature)\n\nTasks:\n  You can write plain text as _notes_ or descriptions wherever you want;\n  ✔ It’s **totally** fine! @done (15-12-18 12:34)\n  ✔  @done (15-12-18 12:34)\n  ☐ \n  ☐ dff\n  ☐ \n  New:\n   ☐ ⌘+enter (ctrl+enter on Windows) adds a new task.\n   ☐ ⌘+i (ctrl+i on Windows) also adds a new task\n   ☐ If you’re on a new line PlainTasks creates a new task on the current line\n   ☐ If you’re on a line with a task pressing new task shortcut adds a task after it\n   ☐ If you’re on a line with some normal text pressing new task shortcut converts it to a task\n   ☐ New tasks are nested as much as the task on the previous line\n  Done:\n   ☐ ⌘+d (ctrl+d on Windows) marks a task as done\n   ☐ Pressing ⌘+d (ctrl+d on Windows) again puts it back in pending mode\n   ☐ ctrl+c (alt+c on Windows) marks the task as cancelled\n  Tagging:\n   ☐ You can add tags using @ sign, like this @tag\n  URLs:\n   ☐ ⌘+shift+U (ctrl+shift+U on Windows) opens the URL under the cursor in your default browser\n     www.github.com or <skype:nickname>\n  File links:\n   ☐ You can create a link to a file by prefixing the file name with a dot and (back)slash sign\n     like: .\\filename\\ or ./another filename/\n     It supports only one filename per line\n     Filename can be absolute path or relative one (to project folder(s) or to open files)\n   ☐ The line and column numbers can be specified by colons after the filename: .\\filename:11:8\n   ☐ In SublimeText 3 you can specify a symbol inside the file by using > character like: .\\filename>symbol\n   ☐ In SublimeText 2 you can specify a text inside that file by using double quotes like: .\\filename\"any text\"\n   ☐ ctrl+o (alt+o on Windows) opens the file in Sublime: try to open .\\install.txt\\\n   ☐ Other ways to create file links:\n      [](install.txt)  ← try to open it\n      [](path \":11:8\")\n      [](path \">symbol\")\n      [](path \"any text\")\n      [[..\\PlainTasks.py]]  ← try to open it\n      [[path::11:8]]\n      [[path::*symbol]]\n      [[path::any text]]\n      [[path]] \":11:8\"\n      [[path]] \">symbol\"\n      [[path]] \"any text\"\n\n  Archiving:\n   ☐ ⌘+shift+A (ctrl+shift+A on Windows) archives tasks in done mode.\n      It does it by removing them from your list and appending them to the bottom of the file under Archive project.\n      The archive project is separated from the other list of projects with a line. See bottom of this file.\n   ☐ ⌘+shift+O (ctrl+shift+O) will archive in Org-Mode style.\n      Removing the entire subtree after cursor and appending it to new file next to original one,\n      e.g. filename.TODO → filename_archive.TODO\n\n  Starting a new todo-list:\n   ☐ Bring up the command palette (it's ⌘+shift+p in Mac and ctrl+shift+p in Windows)\n   ☐ type `task` and select `Tasks: New document` command\n\n--- ✄ -----------------------\nYou can use separator snippet to separate your todo lists, type -- and press tab\n\nPriority:\n  ☐ type c, press tab key — it’ll become @critical\n  ☐ type h, press tab key — it’ll become @high\n  ☐ type l, press tab key — it’ll become @low\n  ☐ type t, press tab key — it’ll become @today\n\nTime Tracking:\n  ☐ type s, press tab key twice — it’ll become @started(13-10-25 15:20)\n    You’ll get a current date and time; When a task with such tag is completed/cancelled,\n    PlainTasks will calculate the time spent on that task and append it to the archived task.\n  ☐ type tg, press tab key twice — @toggle(14-10-13 16:14)\n    That way you can pause and resume started task, so result of calculation will be more correct.\n    First, you need start task, then toggle means pause, next toggle — resume, etc.\n  ☐ type cr, press tab key twice — @created(14-12-24 15:57)\n  ☐ type d, press tab key — @due( )\n    If you press tab key again — it’ll insert current date, same for @due( 0).\n    You can type short date and then press tab to expand it into default format.\n    Short date should be __@due(year-month-day hour:minute)__\n    Dot can be used instead of hyphen, but should be consistent _year.month.day_\n      - year, month, minute, hour can be omitted:\n        - @due(1)          → 1st day of next month always\n        - @due(5)          → 5th day of current month (or next month if current day is 5th or older)\n        - @due(2-3)        → February 3rd of current year or next one\n        - @due(31 23:)     → 31st day of current/next month at 23 hours and minutes are equal to current moment\n        - @due(16.1.1 1:1) → January 1st of 2016 at 01:01 @due(16-01-01 01:01)\n      - relative period of time starts with a plus sign or two\n        __+[+][number][DdWw][h:m]__ — number is optional as well as letter d for days or letter w for weeks\n        - @due(+)   → tomorrow as well as @due( +1) or @due( +1d)\n        - @due(+w)  = @due( +7)\n        - @due(+3w) = @due( +21d)\n        - @due(++)  → count time since date of creation if task contains @created(date), otherwise it is equal to @due(+)\n        - @due(+2:)    = @due( +2.)    →  two hours since current date\n        - @due(+:555)  = @due( +.555)  →  555 minutes since current date\n        - @due(+2 12:) = @due( +2 12.) →  2 days and 12 hours since current date\n\n☐ ctrl+space shows list of those tags\n\nFileType Support:\n PlainTasks support these file types out of the box\n ☐ TODO\n ☐ *.todo\n ☐ *.todolist\n ☐ *.taskpaper\n ☐ *.tasks \n\nYou can customize:\n ☐ New and done bullets\n ☐ List of file-types that should be considered todo lists\n ☐ Key-bindings if you don’t like the default ones\n ☐ Date formating for done tasks\n ☐ Icon for file-type\n ☐ Colour scheme\n ☐ Statistics appearance\n ☐ and more\n See the Readme file on github on how to do these customizations. https://github.com/aziz/PlainTasks\n or in Sublime ./../Readme.md\"## Settings\"\n\nEditor Useful Tools:\n ☐ Use ⌘+control+up/down (ctrl+shift+up/down on Windows) to move tasks up and down.\n ☐ Use ⌘+R (ctrl+R on Windows) to see a list of projects and quickly jump between them\n ☐ F6 toggles spell check\n\n＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿\nArchive:\n ✔ learn how to use PlainTasks @done (12-09-07 07:30)\n",
			"file": "/home/anton/.config/sublime-text-3/Packages/PlainTasks/messages/Tutorial.todo",
			"file_size": 6340,
			"file_write_time": 130949047637147371,
			"settings":
			{
				"buffer_size": 6160,
				"line_ending": "Unix"
			}
		},
		{
			"file": "tiny_synth/instruments/choir/Choir U.csd",
			"settings":
			{
				"buffer_size": 50517,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/anton/x/try_st/try_st/first.py",
			"settings":
			{
				"buffer_size": 33,
				"line_ending": "Unix"
			}
		},
		{
			"file": "tiny_synth/player.py",
			"settings":
			{
				"buffer_size": 2017,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/anton/dev/csound-player/Player.py",
			"settings":
			{
				"buffer_size": 3554,
				"line_ending": "Unix"
			}
		},
		{
			"file": "tiny_synth/faders.py",
			"settings":
			{
				"buffer_size": 1601,
				"line_ending": "Unix"
			}
		},
		{
			"file": "tiny_synth/midi.py",
			"settings":
			{
				"buffer_size": 2420,
				"line_ending": "Unix"
			}
		},
		{
			"file": "tiny_synth/utils.py",
			"settings":
			{
				"buffer_size": 3474,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"command_palette":
	{
		"height": 392.0,
		"selected_items":
		[
			[
				"task",
				"Tasks: New"
			],
			[
				"PI",
				"Package Control: Install Package"
			],
			[
				"m",
				"Markdown Preview: Preview in Browser"
			],
			[
				"ma",
				"Markdown Preview: Preview in Browser"
			],
			[
				"M",
				"Markdown Preview: Preview in Browser"
			],
			[
				"Ma",
				"Markdown Preview: Preview in Browser"
			],
			[
				"Mar",
				"Markdown Preview: Preview in Browser"
			],
			[
				"Mark",
				"Markdown Preview: Preview in Browser"
			],
			[
				"mark",
				"Markdown Preview: Preview in Browser"
			],
			[
				"mp",
				"Markdown Preview: Preview in Browser"
			],
			[
				"mP",
				"Markdown Preview: Preview in Browser"
			],
			[
				"pi",
				"Package Control: Install Package"
			]
		],
		"width": 449.0
	},
	"console":
	{
		"height": 139.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/anton/dev/tiny-synth/src",
		"/home/anton/dev/tiny-synth/tiny_synth",
		"/home/anton/dev/tiny-synth/tiny_synth/instruments",
		"/home/anton/dev/tiny-synth/tiny_synth/instruments/lead-poly"
	],
	"file_history":
	[
		"/home/anton/job.txt",
		"/home/anton/x/try_st/try_st/__init__.py",
		"/home/anton/x/try_st/setup.py",
		"/home/anton/x/try_st/try_st/main.py",
		"/home/anton/dev/tiny-synth/MANIFEST.in",
		"/home/anton/dev/csound-player/PlayerUI.py",
		"/home/anton/dev/csound-player/main.py",
		"/home/anton/dev/tiny-synth/setup.py",
		"/home/anton/dev/tiny-synth/.gitignore",
		"/home/anton/dev/tiny-synth/src/player.py",
		"/home/anton/dev/tiny-synth/src/utils.py",
		"/home/anton/x/wx/accel1.py",
		"/home/anton/dev/tiny-synth/src/setup.py",
		"/home/anton/music/csound-bits/pieces/piano-flow/Main.hs",
		"/home/anton/dev/tiny-synth/src/Lib.hs",
		"/home/anton/dev/tiny-synth/src/piano.py",
		"/home/anton/dev/tiny-synth/src/MANIFEST.in",
		"/home/anton/dev/tiny-synth/src/main.py",
		"/home/anton/dev/tiny-synth/src/inits.py",
		"/etc/apt/sources.list",
		"/var/lib/dpkg/status",
		"/home/anton/dev/tiny-synth/src/instruments/accordeons/Accordeon.csd",
		"/home/anton/idea/inn.txt",
		"/home/anton/dev/tiny-synth/idea/list.csd",
		"/home/anton/dev/tiny-synth/idea/monosynth.csd",
		"/home/anton/dev/tiny-synth/src/instruments/lead-mono/Overtone lead.csd",
		"/home/anton/dev/tiny-synth/src/instruments/epianos/Epiano 1.csd",
		"/home/anton/idea/arseny.hs",
		"/home/anton/dev/tiny-synth/src/instruments/organ/Tone wheel.csd",
		"/home/anton/dev/tiny-synth/src/instruments/pad/Dream pad.csd",
		"/home/anton/dev/csound-expression/src/Csound/Control/Instr.hs",
		"/home/anton/tmp.csd",
		"/home/anton/dev/csound-expression-typed/src/Csound/Typed/Control.hs",
		"/home/anton/dev/csound-expression-typed/src/Csound/Typed/GlobalState/Opcodes.hs",
		"/home/anton/dev/csound-expression-typed/src/Csound/Typed/GlobalState/Instr.hs",
		"/home/anton/dev/csound-expression/csound-expression.cabal",
		"/home/anton/dev/csound-expression-typed/csound-expression-typed.cabal",
		"/home/anton/dev/csound-expression/src/Csound/Air/Patch.hs",
		"/home/anton/dev/csound-expression-typed/src/Csound/Typed/GlobalState/Elements.hs",
		"/home/anton/dev/csound-expression/README.md",
		"/home/anton/music/raga/live-src/Live.hs",
		"/home/anton/music/raga/live-src/Beat.hs",
		"/home/anton/music/csound-bits/patches/Tune.hs",
		"/home/anton/music/csound-bits/patches/tmp.csd",
		"/home/anton/dev/csound-expression/src/Csound/Air.hs",
		"/home/anton/dev/csound-expression/src/Csound/Tab.hs",
		"/home/anton/music/csound-bits/patches/Glitch.hs",
		"/home/anton/dev/csound-expression/src/Csound/Air/Fm.hs",
		"/home/anton/Documents/csound-conf/Dance.hs",
		"/home/anton/dev/csound-catalog/csound-catalog.cabal",
		"/home/anton/dev/csound-catalog/src/Csound/Catalog/Wave/Misc.hs",
		"/home/anton/dev/csound-catalog/src/Csound/Catalog/Wave.hs",
		"/home/anton/dev/csound-catalog/src/Csound/Catalog/Wave/Sharc.hs",
		"/home/anton/dev/csound-expression/src/Csound/Air/Fx.hs",
		"/home/anton/music/raga/live-src/Midi.hs",
		"/home/anton/dev/csound-sampler/csound-sampler.cabal",
		"/home/anton/dev/csound-expression/src/Csound/Air/Pan.hs",
		"/home/anton/dev/csound-catalog/src/Csound/Patch.hs",
		"/home/anton/dev/csound-expression/src/Csound/Control/Sf.hs",
		"/home/anton/dev/csound-expression/ideas/Sharc.hs",
		"/home/anton/dev/csound-expression-typed/src/Csound/Typed.hs",
		"/home/anton/dev/csound-expression/src/Csound/Air/Sampler.hs",
		"/home/anton/dev/csound-expression-typed/src/Csound/Typed/GlobalState/Options.hs",
		"/home/anton/dev/csound-expression/src/Csound/IO.hs",
		"/home/anton/dev/csound-sampler/src/Csound/Sam/Trig.hs",
		"/home/anton/dev/csound-sampler/src/Csound/Sam/Core.hs",
		"/home/anton/dev/csound-expression-typed/src/Csound/Typed/Gui/Widget.hs",
		"/home/anton/dev/csound-expression-typed/src/Csound/Typed/Control/Midi.hs",
		"/home/anton/dev/csound-expression/src/Csound/Air/Wave.hs",
		"/home/anton/dev/csound-sampler/src/Csound/Sam.hs",
		"/home/anton/dev/csound-sampler/src/Csound/Sam/Ui.hs",
		"/home/anton/dev/tutorials/monads-for-drummers/README.md",
		"/home/anton/dev/csound-expression-typed/src/Csound/Typed/GlobalState/GE.hs",
		"/home/anton/dev/csound-expression/ideas/oscil.csd",
		"/home/anton/x/ocaml-dbg/uncaught.ml",
		"/home/anton/dev/csound-expression/ideas/tmp.csd",
		"/home/anton/dev/csound-expression/src/Csound/Air/Live.hs",
		"/home/anton/dev/csound-expression/tutorial/chapters/Patches.md",
		"/home/anton/dev/csound-catalog/src/Csound/Catalog/Wave/Bitwig.hs",
		"/home/anton/dev/csound-catalog/src/Csound/Catalog/Wave/Thor.hs",
		"/home/anton/.config/sublime-text-3/Packages/User/Preferences.sublime-settings",
		"/home/anton/music/csound-bits/patches/Fm.hs",
		"/home/anton/dev/csound-expression/src/Csound/Air/Misc.hs",
		"/home/anton/dev/csound-expression-typed/src/Csound/Typed/Types/Prim.hs",
		"/home/anton/dev/csound-expression-typed/src/Csound/Typed/GlobalState.hs",
		"/home/anton/fpconf/csoundexpression-Ac-NEW.tex",
		"/home/anton/media.py",
		"/home/anton/dev/csound-catalog/src/Csound/Catalog/Wave/Amsterdam.hs",
		"/home/anton/dev/csound-expression-typed/src/Csound/Typed/Misc.hs",
		"/home/anton/music/csound-bits/pieces/mother-is-waiting.csd",
		"/home/anton/Documents/csound-conf/Round-table.md",
		"/home/anton/Documents/csound-conf/Dance2.hs",
		"/home/anton/dev/csound-expression-typed/src/Csound/Typed/Control/Evt.hs",
		"/home/anton/dev/csound-expression-typed/src/Csound/Typed/Control/Mix.hs",
		"/home/anton/music/csound-bits/pieces/celtic/Celtic.hs",
		"/home/anton/music/csound-bits/pieces/jungle-1/Main.hs",
		"/home/anton/dev/data-fix-cse/src/Data/Fix/Cse.hs",
		"/home/anton/music/hip-hop/tracks/tmp.csd",
		"/home/anton/music/hip-hop/tracks/Tam.hs",
		"/home/anton/Documents/csound-conf/Example.hs",
		"/home/anton/x/opcodes/csound-expression-opcodes-typed/csound-expression-opcodes.cabal",
		"/home/anton/dev/csound-expression-dynamic/csound-expression-dynamic.cabal",
		"/home/anton/Documents/csound-conf/tmp.csd",
		"/home/anton/x/haste/HelloWorld.hs",
		"/home/anton/M.hs",
		"/home/anton/Documents/csound-conf/present/reveal.js/css/reveal.css",
		"/home/anton/Documents/csound-conf/present/reveal.js/index.html",
		"/home/anton/fpconf/tmp.csd",
		"/home/anton/dev/csound-expression-dynamic/src/Csound/Dynamic/Types/Exp.hs",
		"/home/anton/dev/csound-expression-dynamic/src/Csound/Dynamic/Types/Dep.hs",
		"/home/anton/dev/csound-expression-dynamic/src/Csound/Dynamic/Build.hs",
		"/home/anton/fpconf/Main.hs",
		"/home/anton/Tam.hs",
		"/home/anton/dev/csound-expression-dynamic/src/Csound/Dynamic/Build/Numeric.hs",
		"/home/anton/dev/Sm.hs",
		"/home/anton/job/Cartoon-Mobile/caml-score-player/_oasis",
		"/home/anton/dev/csound-expression-dynamic/src/Csound/Dynamic/Render/Instr.hs",
		"/home/anton/music/csound-bits/pieces/jungle-1/tmp.csd",
		"/home/anton/music/csound-bits/pieces/celtic/Main",
		"/home/anton/music/csound-bits/pieces/tmp.csd",
		"/home/anton/dev/data-fix/src/Data/Fix.hs",
		"/home/anton/dev/csound-catalog/src/Csound/Catalog/Drum/Tr808.hs",
		"/home/anton/dev/csound-expression/tutorial/chapters/EventsTutorial.md",
		"/home/anton/dev/csound-expression/tutorial/Index.md",
		"/home/anton/dev/csound-expression-typed/src/Csound/Typed/Types/MixSco.hs",
		"/home/anton/dev/csound-expression-typed/src/Csound/Typed/Control/Osc.hs",
		"/home/anton/dev/csound-expression-typed/src/Csound/Typed/Lib/StableMaps/Dynamic.hs",
		"/home/anton/dev/csound-expression-typed/src/Csound/Typed/Lib/StableMaps/Dynamic/Map.hs"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
			"/home/anton/dev/csound-expression-typed/src",
			"<project>",
			"/home/anton/dev/csound-expression-typed",
			"/home/anton/dev/csound-expression-typed/src",
			"/home/anton/dev/csound-expression/src",
			"/home/anton/dev/csound-expression-typed/src",
			"/home/anton/dev/csound-expression-typed",
			"/home/anton/dev/csound-expression-typed/src",
			"/home/anton/dev/csound-expression"
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"kr1",
			"kr0",
			"chnget",
			"kr2",
			"instrumentsPath",
			"instrumentPath",
			"print",
			"setValue",
			"setTuni",
			"onExit",
			"initPla",
			"load",
			"pickle",
			"instrumentsPath",
			"key_pic",
			"keys1",
			"json.",
			"pickle.",
			"pickl",
			"pick",
			"fader",
			"470",
			".faders",
			"faders",
			"includes",
			"glob",
			"kxstu",
			"libcsound64-6.0",
			"python-csound",
			"/key",
			"key",
			"key.",
			"trees",
			"tree =",
			".Re",
			"Re",
			"re",
			"redraw",
			"fillTree",
			"PageOne",
			"mkTree",
			"setfont",
			"resonance",
			"fader",
			"font",
			"readPickleConfig",
			"font",
			"fullIn",
			"addLea",
			"print",
			"'Play",
			"'play",
			"\\'play",
			"play",
			"print",
			"player",
			"piano",
			"player",
			"active_ke",
			"!= ",
			"if key == Non",
			"if key:",
			"playNoteOn",
			"redraw",
			"getCurrentKey",
			"getKeyNum",
			"gkrgg2",
			"ar1",
			"gargg2",
			"ar3",
			"gargg2",
			"kr0",
			"gkrgg3",
			"ampmidi",
			"event",
			"makeCa",
			"event",
			"newClear",
			"ppInstrId",
			"74",
			"newGlobalVars",
			"instrs",
			"NamedI",
			"25",
			"InstrBody",
			"Instrs",
			"Arg",
			"StableName",
			"saveTo",
			"saveToMidi",
			"saveToMidiInstr",
			"ampcps`",
			"sendChn",
			"epia",
			"epiano1",
			"simpleMa",
			"toneW",
			"Ir",
			"sigOn1",
			"sendChn",
			"chn",
			"scaleMidiVolumeFactor",
			"setMidiDevice",
			"midi",
			"just",
			"rtmidi",
			"midiVol",
			"keyPanelBy",
			"renderC",
			"delay",
			"it utrns out",
			"dreamPad",
			">>",
			"the monad",
			"Keli",
			"Kel",
			"dreamPa",
			"tabs",
			"tab",
			"saveGen",
			"newTab",
			"saveId",
			"newGen",
			"renderTab",
			"newGen",
			"saveGen",
			"renderTab",
			"Tab"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"Ref",
			"h3",
			"Ref",
			"metro",
			"Ref",
			"delaySig",
			"FxFun",
			"tabDelay",
			"Hvs",
			"SizeFFT",
			"PitchSig",
			"TempoSig",
			"Overlap",
			"midiAmpInstr",
			""
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 9,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "tiny_synth/main.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 16133,
						"regions":
						{
						},
						"selection":
						[
							[
								11240,
								11240
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 5974.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "setup.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1937,
						"regions":
						{
						},
						"selection":
						[
							[
								1767,
								1767
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "README.md",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 994,
						"regions":
						{
						},
						"selection":
						[
							[
								107,
								107
							]
						],
						"settings":
						{
							"syntax": "Packages/Markdown/Markdown.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "MANIFEST.in",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 81,
						"regions":
						{
						},
						"selection":
						[
							[
								81,
								81
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 13,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "tiny_synth/resources/__init__.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "tiny_synth/piano.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6509,
						"regions":
						{
						},
						"selection":
						[
							[
								3110,
								3110
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1384.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "tiny_synth/inits.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 574,
						"regions":
						{
						},
						"selection":
						[
							[
								574,
								574
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "tiny_synth/Lib.hs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 11233,
						"regions":
						{
						},
						"selection":
						[
							[
								9417,
								9417
							]
						],
						"settings":
						{
							"syntax": "Packages/Haskell/Haskell.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 3468.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 8,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 247,
						"regions":
						{
						},
						"selection":
						[
							[
								50,
								50
							]
						],
						"settings":
						{
							"auto_indent": false,
							"default_dir": "/home/anton/dev/tiny-synth/src",
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_width": 2,
							"word_wrap": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "/home/anton/.config/sublime-text-3/Packages/PlainTasks/messages/Tutorial.todo",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6160,
						"regions":
						{
						},
						"selection":
						[
							[
								3173,
								3173
							]
						],
						"settings":
						{
							"syntax": "Packages/PlainTasks/PlainTasks.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 296.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "tiny_synth/instruments/choir/Choir U.csd",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 50517,
						"regions":
						{
						},
						"selection":
						[
							[
								50278,
								50278
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 36404.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "/home/anton/x/try_st/try_st/first.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 33,
						"regions":
						{
						},
						"selection":
						[
							[
								33,
								33
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 15,
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "tiny_synth/player.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2017,
						"regions":
						{
						},
						"selection":
						[
							[
								851,
								851
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 357.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"type": "text"
				},
				{
					"buffer": 13,
					"file": "/home/anton/dev/csound-player/Player.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3554,
						"regions":
						{
						},
						"selection":
						[
							[
								647,
								647
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": -0.0,
						"translation.y": 153.0,
						"zoom_level": 1.0
					},
					"stack_index": 14,
					"type": "text"
				},
				{
					"buffer": 14,
					"file": "tiny_synth/faders.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1601,
						"regions":
						{
						},
						"selection":
						[
							[
								373,
								373
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": -0.0,
						"translation.y": 204.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"type": "text"
				},
				{
					"buffer": 15,
					"file": "tiny_synth/midi.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2420,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 16,
					"type": "text"
				},
				{
					"buffer": 16,
					"file": "tiny_synth/utils.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3474,
						"regions":
						{
						},
						"selection":
						[
							[
								2181,
								2181
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 714.0,
						"zoom_level": 1.0
					},
					"stack_index": 12,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 25.0
	},
	"input":
	{
		"height": 33.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 112.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"project": "tiny-synth.sublime-project",
	"replace":
	{
		"height": 46.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
			[
				"",
				"~/to"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"selected_items":
		[
			[
				"",
				"~/dev/csound-expression.sublime-project"
			],
			[
				"\\",
				"~/dev/csound-expression.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 392.0,
		"selected_items":
		[
		],
		"width": 521.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 303.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
